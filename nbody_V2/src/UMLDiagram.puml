@startuml

abstract class NBodySimulator
abstract class Univers
abstract class Body
abstract class Vector

NBodySimulator <|-- Univers
Univers <|-- Body

class NBodySimulator {
- {static} final double min_dt = 0.0001;
- {static} final double max_dt = 10;
- {static} final int min_pauseTime = 1;
- {static} final int max_pauseTime = 20;
--
+ main (args : String[])
+ NBodySimulator(String fname, double dt, int pauseTime, boolean do_trace)
+ NBodySimulator(int numBodies)

}

class Univers {
--
+ Universe (fname : String)
+ Univers  (numBodies : int)

}

class Body {
--
+ Body(Vector r, Vector v, double mass)
+ void move(Vector f, double dt)
+ Vector forceFrom(Body b)
+ Vector getPosition()

}

class Vector {
-model n: int
- model data : double[n]
--
+ Vector (n : int)
+ Vector(double[] data)
+ int length()
+ double dot(Vector that)
+ double magnitude()
+ double distanceTo(Vector that)
+ Vector plus(Vector that)
+ Vector minus(Vector that)
+ double cartesian(int i)
+ Vector times(double factor)
+ Vector scale(double factor)
+ Vector direction()
+ String toString()
+ static void main(String[] args)

}


@enduml